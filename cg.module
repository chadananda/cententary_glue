<?php

// $Id$

function cg_menu() {
  $items['admin/centenary'] = array(
    'title' => 'Centenary site',
    'description' => 'Custom settings for centenary site',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cg_admin'),
    'access arguments' => array('administer site configuration'),
    'file' => 'cg.admin.inc',
  );
  //return $items;
}

function cg_filter($op, $delta = 0, $format = -1, $text = '') {
  switch ($op) {
    case 'list':
      return array(0 => t('Teaser filter'));
    case 'description':
      return t('Substitutes teaser tags [teaser:123] with node teaser.');
    case 'no cache':
      return TRUE;
    case 'prepare':
      return $text;
    case 'settings':
      return;
    case 'process':
      $matches = array();
      if (preg_match_all("#\[teaser:([\d]+):*(left|right)*\]#", $text, $matches, PREG_SET_ORDER)) {
        foreach ($matches as $match) {
          if ($node = node_load($match[1])) {
            if ($match[2]) $class = $match[2];
            $insert = '<div class="node node-teaser ' . check_plain($node->type) . ' ' . $class . '">' . node_view($node, TRUE, FALSE, FALSE) . '</div>';
            $text = str_replace($match[0], $insert, $text);
          }
          else {
            $text = str_replace($match[0], '', '$text');
          }
        }
      }
      return $text;
    default:
      return $text;
  }
}
function cg_filter_tips($delta, $format, $long = FALSE) {
  return t('Inserting the a tag like [teaser:123] will print a node teaser in that location.');
}

function cg_nodeapi(&$node, $op, $teaser, $page) {
  if ($op == 'view' ) {
    $node->content['body']['#value'] = '<div class="node-body">' . $node->content['body']['#value'] . '</div>';
    global $user;
    if ($page && $user->name == 'david') {
      if (is_array($node->content['field_assets']['field']['items']) && count($node->content['field_assets']['field']['items'])) {
        if ($count = substr_count($node->content['body']['#value'], '<asset')) {
          $node->content['field_assets']['#post_render'][] = 'cg_addclass_post_render';
          $node->content['field_assets']['#weight'] = 1;
          for ($i=0; $i<$count; $i++) {
            if (count($node->content['field_assets']['field']['items'])) {
              $ref = array_shift($node->content['field_assets']['field']['items']);
              $node->content['body']['#value'] = preg_replace('#<asset:*(left|right)* />#', "<div class='node-teaser centenary-node asset $1'>%asset$i</div>", $node->content['body']['#value'], 1);
              $ref_html[] = drupal_render($ref);
              $search[] = "%asset$i";
            }
          }
          $node->content['body']['#value'] = str_replace($search, $ref_html, $node->content['body']['#value']);
        }
      }
      $node->content['body']['#value'] = preg_replace('#<asset:*(left|right)* />#', '', $node->content['body']['#value']);
    }
  }
}
function cg_addclass_post_render($content, $element) {
  return '<div class="cg-field">' . $content . '</div>';
}

function cg_form_node_type_form_alter(&$form, $form_state) {
  // Built in content types do not allow changes to type machine name.
    if (isset($form['identity']['type']['#default_value'])) {
      $type = $form['identity']['type']['#default_value'];
    }
    else {
      $type = $form['identity']['type']['#value'];
    }
  if (module_exists('token')) {
    $form['#submit'][] = 'cg_node_type_form_submit_teaserheaders';
    $form['teaserheader'] = array(
      '#type' => 'fieldset',
      '#title' => t('Teaser Headers'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#access' => user_access('administer site configuration'),
    );
    $form['teaserheader']['cg_teaserheader'] = array(
      '#type' => 'textfield',
      '#title' => t('Teaser header token'),
      '#default_value' => variable_get("cg_teaserheader_$type", variable_get('cg_teaserheaders', '[type-name]: [title]')),
      '#description' => t('You may optionally enter a token-based header to appear on teasers for this content type.  You may use the tokens specified below.'),
    );
    $form['teaserheader']['token_help'] = array(
      '#title' => t('Replacement patterns'),
      '#type' => 'fieldset',
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
    );
    $form['teaserheader']['token_help']['help'] = array(
      '#value' => theme('token_help', 'node'),
    );
  }
}


