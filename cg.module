<?php

// $Id$

function cg_filter($op, $delta = 0, $format = -1, $text = '') {
  switch ($op) {
    case 'list':
      return array(0 => t('Teaser filter'));
    case 'description':
      return t('Substitutes teaser tags [teaser:123] with node teaser.');
    case 'no cache':
      return TRUE;
    case 'prepare':
      return $text;
    case 'settings':
      return;
    case 'process':
      $matches = array();
      if (preg_match_all("#\[teaser:([\d]+):*(left|right)*\]#", $text, $matches, PREG_SET_ORDER)) {
        foreach ($matches as $match) {
          if ($node = node_load($match[1])) {
            if ($node->status) {
              if ($match[2]) $class = $match[2];
              $insert = '<div class="node node-teaser ' . check_plain($node->type) . ' ' . $class . '">' . node_view($node, TRUE, FALSE, FALSE) . '</div>';
              $text = str_replace($match[0], $insert, $text);
            }
            else {
              $text = str_replace($match[0], '', $text);
            }
          }
          else {
            $text = str_replace($match[0], '', $text);
          }
        }
      }
      return $text;
    default:
      return $text;
  }
}
function cg_filter_tips($delta, $format, $long = FALSE) {
  return t('Inserting the a tag like [teaser:123] will print a node teaser in that location.  If you include a float direction, i.e. [teaser:123:right], the teaser will be floated in the direction specified.');
}

function cg_nodeapi(&$node, $op, $teaser, $page) {
  if ($op == 'view' ) {
    $node->content['body']['#value'] = '<div class="node-body">' . $node->content['body']['#value'] . '</div>';
  }
  elseif ($op == 'presave') {
    if (is_array($node->field_clip_img[0])) {
      $node->field_main_image[0] = array(
        'fid' => $node->field_clip_img[0]['fid'],
        'list' => 1,
        'data' => $node->field_clip_img[0]['data'],
      );
    }
    if (!empty($node->field_editingassigned[0]['uid'])) {
      if ($oldnode = node_load($node->nid)) {
        if ($oldnode->field_editingassigned[0]['uid'] == $node->field_editingassigned[0]['uid']) {
          return;
        }
      }
      if ($account = user_load($node->field_editingassigned[0]['uid'])) {
        drupal_mail('cg', 'editorassigned', $account->mail, 'en', array('node' => $node));
      }
    }
  }
}

function cg_mail($key, &$message, $params) {
  $node = $params['node'];
  $message['subject'] = '[centenary] Content assigned to you';
  $message['body'][] = 'The following content has been assigned to you:';
  $message['body'][] = "===================\n" .
    "$node->title\n" .
    "Status: {$node->field_editingstatus[0]['value']}\n" .
    "Notes: {$node->field_editingnotes[0]['value']}\n" .
    '===================';
  $message['body'][] = "View link: http://centenary.bahai.us/node/{$node->nid}";
  $message['body'][] = "Edit link: http://centenary.bahai.us/node/{$node->nid}/edit";
  $message['body'][] = "For a list of all content assigned to you, see http://centenary.bahai.us/editing/mine/" . $node->field_editingassigned[0]['uid'];
  $message['body'][] = "Thanks!\nThe Centenary Site Team";
}

function cg_form_node_type_form_alter(&$form, $form_state) {
  // Built in content types do not allow changes to type machine name.
    if (isset($form['identity']['type']['#default_value'])) {
      $type = $form['identity']['type']['#default_value'];
    }
    else {
      $type = $form['identity']['type']['#value'];
    }
    $form['cg_options'] = array(
      '#type' => 'fieldset',
      '#title' => t('Centenary Options'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#access' => user_access('administer site configuration'),
    );
    $form['cg_options']['cg_superhead'] = array(
      '#type' => 'textfield',
      '#title' => t('Node super head'),
      '#default_value' => variable_get("cg_superhead_$type", ''),
      '#description' => t("You may optionally enter a super head for all nodes of type $type")
    );
  if (module_exists('token')) {
    $form['cg_options']['cg_teaserheader'] = array(
      '#type' => 'textfield',
      '#title' => t('Teaser header token'),
      '#default_value' => variable_get("cg_teaserheader_$type", variable_get('cg_teaserheaders', '[type-name]: [title]')),
      '#description' => t('You may optionally enter a token-based header to appear on teasers for this content type.  You may use the tokens specified below.'),
    );
    $form['cg_options']['token_help'] = array(
      '#title' => t('Replacement patterns'),
      '#type' => 'fieldset',
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
    );
    $form['cg_options']['token_help']['help'] = array(
      '#value' => theme('token_help', 'node'),
    );
  }
}

function cg_form_alter(array &$form, array &$form_state, $form_id) {
  if (isset($form['type']) && isset($form['#node']) && $form['type']['#value'] .'_node_form' == $form_id) {
    if ($form['type']['#value'] == 'city') {
      $x = round($form['group_map_position']['field_pos_x'][0]['#default_value']['value'] / 2); 
      $y = round($form['group_map_position']['field_pos_y'][0]['#default_value']['value'] / 2);
      $show = $x || $y ? '' : ' display:none;';
      $flagtype = $form['group_map_position']['field_map_flag_type']['#default_value'][0]['value'];
      $flagtype = $flagtype ? $flagtype : 'map-pin-red';
      $flag = "
        <div class='travelmap-city' style='left:{$x}px; top:{$y}px;$show '>
        <div class='travelmap-city-marker'>
          <img src='/sites/all/themes/centenary/images/$flagtype.png' height=24 width=24 />
        </div></div>
      ";
      $form['group_map_position']['mappos'] = array(
        '#value' => '<style>.travelmap-city{position:absolute;height:1px;width:1px;}
                     .travelmap-city-marker{position:absolute;left:-5px;bottom:-8px;}
                     #travelmap-picker{position:relative;float:right;width:350px;}
                     </style>
                     <div id="travelmap-picker">
                     <img width="350" height="212" src="/sites/all/themes/centenary/images/map-large-4.jpg" />' . $flag . '
                     <div class="description">Click on the image to place the flag</div>
                     </div>',
        '#weight' => -100,
      );
      drupal_add_js(drupal_get_path('module', 'cg') . '/travelmap_picker.js');
    }
  }
} /* */

